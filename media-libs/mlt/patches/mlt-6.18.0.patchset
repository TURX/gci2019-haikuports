From bfa8ddadb0a810f444fd7ae71998095447bacb68 Mon Sep 17 00:00:00 2001
From: TURX <turx2003@gmail.com>
Date: Fri, 17 Jan 2020 00:46:19 +0800
Subject: [PATCH] fix haiku support

---
 configure                                  | 15 ++++++++++++++-
 src/framework/mlt_consumer.c               |  8 ++++++++
 src/framework/mlt_slices.c                 |  2 ++
 src/mlt++/configure                        |  2 +-
 src/modules/avformat/configure             |  8 ++++++--
 src/modules/avformat/vdpau.c               | 14 ++++++++++++++
 src/modules/decklink/consumer_decklink.cpp |  2 ++
 src/modules/decklink/producer_decklink.cpp |  2 ++
 src/modules/frei0r/factory.c               |  3 +++
 src/modules/jackrack/plugin_mgr.c          | 15 +++++++++++++++
 src/modules/plusgpl/consumer_cbrts.c       |  4 ++++
 src/modules/qt/configure                   |  2 +-
 src/modules/rtaudio/RtAudio.cpp            |  6 ++++++
 src/modules/sox/configure                  |  2 +-
 14 files changed, 79 insertions(+), 6 deletions(-)

diff --git a/configure b/configure
index a32a75ce..33dd3704 100755
--- a/configure
+++ b/configure
@@ -131,6 +131,16 @@ build_config()
 		echo "RDYNAMIC=-rdynamic"
 		echo "LDFLAGS+=-Wl,--as-needed"
 		;;
+		Haiku)
+		[ "$optimisations" = "true" ] &&
+			echo "OPTIMISATIONS+=-ffast-math"
+		echo "CFLAGS+=-fPIC"
+		echo "CXXFLAGS+=-fPIC"
+		echo "SHFLAGS=-shared"
+		echo "LIBDL="
+		echo "RDYNAMIC="
+		echo "LDFLAGS+=-Wl,--no-undefined -Wl,--as-needed"
+		;;
 		MinGW)
 		[ "$windeploy" = false ] &&
 			echo "CFLAGS+=-DNODEPLOY"
@@ -209,7 +219,6 @@ build_pkgconfig()
 
 # Define build directory for scripts called
 export build_dir=`dirname $0`
-export prefix=/usr/local
 export libdir=""
 export datadir=""
 export mandir=""
@@ -229,6 +238,10 @@ export amd64=false
 export extra_versioning=false
 export melt_noversion=false
 export windeploy=true
+if [ "$targetos" != "Haiku" ]
+then
+	export prefix=/usr/local
+fi
 
 # Define the compiler used in tests (gcc is not installed everywhere)
 : ${CC:=gcc}
diff --git a/src/framework/mlt_consumer.c b/src/framework/mlt_consumer.c
index 21f02403..f8241ca2 100644
--- a/src/framework/mlt_consumer.c
+++ b/src/framework/mlt_consumer.c
@@ -1191,9 +1191,13 @@ static void consumer_work_start( mlt_consumer self )
 
 		priority.sched_priority = mlt_properties_get_int( MLT_CONSUMER_PROPERTIES( self ), "priority" );
 		pthread_attr_init( &thread_attributes );
+#ifndef __HAIKU__
 		pthread_attr_setschedpolicy( &thread_attributes, SCHED_OTHER );
+#endif
 		pthread_attr_setschedparam( &thread_attributes, &priority );
+#ifndef __HAIKU__
 		pthread_attr_setinheritsched( &thread_attributes, PTHREAD_EXPLICIT_SCHED );
+#endif
 		pthread_attr_setscope( &thread_attributes, PTHREAD_SCOPE_SYSTEM );
 
 		while ( n-- )
@@ -1779,9 +1783,13 @@ static void mlt_thread_create( mlt_consumer self, thread_function_t function )
 		{
 			pthread_attr_t thread_attributes;
 			pthread_attr_init( &thread_attributes );
+#ifndef __HAIKU__
 			pthread_attr_setschedpolicy( &thread_attributes, SCHED_OTHER );
+#endif
 			pthread_attr_setschedparam( &thread_attributes, &priority );
+#ifndef __HAIKU__
 			pthread_attr_setinheritsched( &thread_attributes, PTHREAD_EXPLICIT_SCHED );
+#endif
 			pthread_attr_setscope( &thread_attributes, PTHREAD_SCOPE_SYSTEM );
 			priv->ahead_thread = malloc( sizeof( pthread_t ) );
 			pthread_t *handle = priv->ahead_thread;
diff --git a/src/framework/mlt_slices.c b/src/framework/mlt_slices.c
index 60b17cd4..63e5daec 100644
--- a/src/framework/mlt_slices.c
+++ b/src/framework/mlt_slices.c
@@ -200,7 +200,9 @@ mlt_slices mlt_slices_init( int threads, int policy, int priority )
 		policy = SCHED_OTHER;
 	if ( priority < 0 )
 		priority = sched_get_priority_max( policy );
+#ifndef __HAIKU__
 	pthread_attr_setschedpolicy( &tattr, policy );
+#endif
 	param.sched_priority = priority;
 	pthread_attr_setschedparam( &tattr, &param );
 
diff --git a/src/mlt++/configure b/src/mlt++/configure
index 48e1fd9e..8b490cbb 100755
--- a/src/mlt++/configure
+++ b/src/mlt++/configure
@@ -10,7 +10,7 @@ case $targetos in
                 echo "CXXFLAGS+=-Wall -fPIC"
 		echo "LIBFLAGS=-dynamiclib -single_module"
 		;;
-	Linux|FreeBSD|NetBSD|GNU/kFreeBSD|GNU)
+	Linux|FreeBSD|NetBSD|GNU/kFreeBSD|GNU|Haiku)
 		echo LIBSUF=.so
 		echo "CXXFLAGS+=-Wall $WARNINGS -fPIC -DPIC"
 		echo "LIBFLAGS=-shared"
diff --git a/src/modules/avformat/configure b/src/modules/avformat/configure
index 3c71a3ee..1bcabc06 100755
--- a/src/modules/avformat/configure
+++ b/src/modules/avformat/configure
@@ -25,13 +25,15 @@ else
 	Darwin)
 		export LIBSUF=.dylib
 		;;
-	Linux|FreeBSD|NetBSD)
+	Linux|FreeBSD|NetBSD|Haiku)
 		export LIBSUF=.so
 		;;
 	*)
 		;;
 	esac
 		
+if [ "$targetos" != "Haiku" ]
+then
 	bits=$(uname -m)
 	case $bits in
 	x86_64)
@@ -41,7 +43,9 @@ else
 		export LIBDIR=lib
 		;;
 	esac
-
+else
+	export LIBDIR=lib
+fi
 	echo > config.mak
 
 	export static_ffmpeg=
diff --git a/src/modules/avformat/vdpau.c b/src/modules/avformat/vdpau.c
index 63b52b9b..0cad5cac 100644
--- a/src/modules/avformat/vdpau.c
+++ b/src/modules/avformat/vdpau.c
@@ -21,6 +21,11 @@
 #include <X11/Xlib.h>
 #include <dlfcn.h>
 
+#ifdef __HAIKU__
+#include <PathFinder.h>
+#include <Path.h>
+#endif
+
 extern pthread_mutex_t mlt_sdl_mutex;
 
 static VdpDeviceCreateX11      *vdpau_device_create_x11;
@@ -73,6 +78,14 @@ static int vdpau_init( producer_avformat self )
 	if ( !vdpau_init_done )
 	{
 		int flags = RTLD_NOW;
+#ifdef __HAIKU__
+		BPathFinder finder;
+    	BPath path;
+    	finder.FindPath(B_USER_LIB_DIRECTORY, NULL, path);
+		char* path_str = path.Path();
+		strcat(path_str, "/libvdpau.so");
+		object = dlopen(path_str, flags);
+#else
 		object = dlopen( "/usr/lib/libvdpau.so", flags );
 #ifdef ARCH_X86_64
 		if ( !object )
@@ -82,6 +95,7 @@ static int vdpau_init( producer_avformat self )
 #elif ARCH_X86
 		if ( !object )
 			object = dlopen( "/usr/lib/i386-linux-gnu/libvdpau.so.1", flags );
+#endif
 #endif
 		if ( !object )
 			object = dlopen( "/usr/local/lib/libvdpau.so", flags );
diff --git a/src/modules/decklink/consumer_decklink.cpp b/src/modules/decklink/consumer_decklink.cpp
index 2ffdef04..c659c641 100644
--- a/src/modules/decklink/consumer_decklink.cpp
+++ b/src/modules/decklink/consumer_decklink.cpp
@@ -657,7 +657,9 @@ protected:
 			return;
 
 		pthread_attr_init(&tattr);
+#ifndef __HAIKU__
 		pthread_attr_setschedpolicy(&tattr, SCHED_FIFO);
+#endif
 
 		if ( !strcmp( "max", mlt_properties_get( properties, "priority" ) ) )
 			param.sched_priority = sched_get_priority_max(SCHED_FIFO) - 1;
diff --git a/src/modules/decklink/producer_decklink.cpp b/src/modules/decklink/producer_decklink.cpp
index 43e7fa46..75a7c5d3 100644
--- a/src/modules/decklink/producer_decklink.cpp
+++ b/src/modules/decklink/producer_decklink.cpp
@@ -457,7 +457,9 @@ public:
 				struct sched_param param;
 
 				pthread_attr_init(&tattr);
+#ifndef __HAIKU__
 				pthread_attr_setschedpolicy(&tattr, SCHED_FIFO);
+#endif
 
 				if ( !strcmp( "max", mlt_properties_get( properties, "priority" ) ) )
 					param.sched_priority = sched_get_priority_max(SCHED_FIFO) - 1;
diff --git a/src/modules/frei0r/factory.c b/src/modules/frei0r/factory.c
index ba31808b..8a851aba 100644
--- a/src/modules/frei0r/factory.c
+++ b/src/modules/frei0r/factory.c
@@ -39,6 +39,9 @@
 #elif defined(__APPLE__) && defined(RELOCATABLE)
 #define LIBSUF ".so"
 #define FREI0R_PLUGIN_PATH "/PlugIns/frei0r-1"
+#elif defined(__HAIKU__)
+#define LIBSUF ".so"
+#define FREI0R_PLUGIN_PATH "/boot/system/lib/frei0r-1"
 #else
 #define LIBSUF ".so"
 #define FREI0R_PLUGIN_PATH "/usr/lib/frei0r-1:/usr/lib64/frei0r-1:/opt/local/lib/frei0r-1:/usr/local/lib/frei0r-1:$HOME/.frei0r-1/lib"
diff --git a/src/modules/jackrack/plugin_mgr.c b/src/modules/jackrack/plugin_mgr.c
index 7650f2fb..c6eeb015 100644
--- a/src/modules/jackrack/plugin_mgr.c
+++ b/src/modules/jackrack/plugin_mgr.c
@@ -41,6 +41,11 @@
 #include "framework/mlt_log.h"
 #include "framework/mlt_factory.h"
 
+#ifdef __HAIKU__
+#include <PathFinder.h>
+#include <Path.h>
+#endif
+
 static gboolean
 plugin_is_valid (const LADSPA_Descriptor * descriptor)
 {
@@ -233,7 +238,17 @@ plugin_mgr_get_path_plugins (plugin_mgr_t * plugin_mgr)
   }
 #else
   if (!ladspa_path)
+#ifndef __HAIKU__
     ladspa_path = g_strdup ("/usr/local/lib/ladspa:/usr/lib/ladspa:/usr/lib64/ladspa");
+#else
+  {
+    BPathFinder finder;
+    BPath path;
+    finder.FindPath(B_USER_LIB_DIRECTORY, NULL, path);
+    ladspa_path = path.Path();
+    strcat(ladspa_path, "/ladspa");
+  }
+#endif
 #endif
   
   for (dir = strtok (ladspa_path, MLT_DIRLIST_DELIMITER); dir; dir = strtok (NULL, MLT_DIRLIST_DELIMITER))
diff --git a/src/modules/plusgpl/consumer_cbrts.c b/src/modules/plusgpl/consumer_cbrts.c
index 1e0e9528..fb3dcc01 100644
--- a/src/modules/plusgpl/consumer_cbrts.c
+++ b/src/modules/plusgpl/consumer_cbrts.c
@@ -917,9 +917,13 @@ static void start_output_thread( consumer_cbrts self )
 		pthread_attr_t thread_attributes;
 		pthread_attr_init( &thread_attributes );
 		priority.sched_priority = rtprio;
+#ifndef __HAIKU__
 		pthread_attr_setschedpolicy( &thread_attributes, SCHED_FIFO );
+#endif
 		pthread_attr_setschedparam( &thread_attributes, &priority );
+#ifndef __HAIKU__
 		pthread_attr_setinheritsched( &thread_attributes, PTHREAD_EXPLICIT_SCHED );
+#endif
 		pthread_attr_setscope( &thread_attributes, PTHREAD_SCOPE_SYSTEM );
 		if ( pthread_create( &self->output_thread, &thread_attributes, output_thread, self ) < 0 )
 		{
diff --git a/src/modules/qt/configure b/src/modules/qt/configure
index dbb2e996..ccf18d52 100755
--- a/src/modules/qt/configure
+++ b/src/modules/qt/configure
@@ -24,7 +24,7 @@ else
 	Darwin)
 		export LIBSUF=.dylib
 		;;
-	Linux|FreeBSD|NetBSD)
+	Linux|FreeBSD|NetBSD|Haiku)
 		export LIBSUF=.so
 		;;
 	*)
diff --git a/src/modules/rtaudio/RtAudio.cpp b/src/modules/rtaudio/RtAudio.cpp
index 50ee333f..769e580d 100644
--- a/src/modules/rtaudio/RtAudio.cpp
+++ b/src/modules/rtaudio/RtAudio.cpp
@@ -9141,12 +9141,18 @@ bool RtApiOss :: probeDeviceOpen( unsigned int device, StreamMode mode, unsigned
       else if ( priority > max ) priority = max;
       param.sched_priority = priority;
       pthread_attr_setschedparam( &attr, &param );
+#ifndef __HAIKU__
       pthread_attr_setschedpolicy( &attr, SCHED_RR );
     }
     else
       pthread_attr_setschedpolicy( &attr, SCHED_OTHER );
 #else
+    }
+#endif
+#else
+#ifndef __HAIKU__
     pthread_attr_setschedpolicy( &attr, SCHED_OTHER );
+#endif
 #endif
 
     stream_.callbackInfo.isRunning = true;
diff --git a/src/modules/sox/configure b/src/modules/sox/configure
index 1c401130..7f00ae76 100755
--- a/src/modules/sox/configure
+++ b/src/modules/sox/configure
@@ -8,7 +8,7 @@ then
 	Darwin)
 		LDD="otool -L"
 		;;
-	Linux|FreeBSD|NetBSD)
+	Linux|FreeBSD|NetBSD|Haiku)
 		LDD="ldd"
 		;;
 	*)
-- 
2.20.1

